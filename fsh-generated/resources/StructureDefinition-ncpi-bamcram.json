{
  "resourceType": "StructureDefinition",
  "id": "ncpi-bamcram",
  "url": "https://nih-ncpi.github.io/ncpi-fhir-ig-2/StructureDefinition/ncpi-bamcram",
  "version": "0.0.1",
  "name": "NcpiBAMCRAM",
  "title": "BAM or CRAM file profile",
  "status": "draft",
  "description": "BAM or CRAM file profile",
  "fhirVersion": "4.3.0",
  "kind": "resource",
  "abstract": false,
  "type": "Observation",
  "baseDefinition": "https://nih-ncpi.github.io/ncpi-fhir-ig-2/StructureDefinition/ncpi-reads-file",
  "derivation": "constraint",
  "differential": {
    "element": [
      {
        "id": "Observation.component",
        "path": "Observation.component",
        "min": 7
      },
      {
        "id": "Observation.component:is_paired_end",
        "path": "Observation.component",
        "sliceName": "is_paired_end",
        "min": 0,
        "max": "1"
      },
      {
        "id": "Observation.component:is_paired_end.code",
        "path": "Observation.component.code",
        "patternCodeableConcept": {
          "coding": [
            {
              "code": "IsPairedEnd"
            }
          ]
        }
      },
      {
        "id": "Observation.component:is_paired_end.value[x]",
        "path": "Observation.component.value[x]",
        "type": [
          {
            "code": "CodeableConcept"
          },
          {
            "code": "boolean"
          }
        ]
      },
      {
        "id": "Observation.component:adaptor_trimmed",
        "path": "Observation.component",
        "sliceName": "adaptor_trimmed",
        "min": 1,
        "max": "1"
      },
      {
        "id": "Observation.component:adaptor_trimmed.code",
        "path": "Observation.component.code",
        "patternCodeableConcept": {
          "coding": [
            {
              "code": "AdaptorTrimmed"
            }
          ]
        }
      },
      {
        "id": "Observation.component:adaptor_trimmed.value[x]",
        "path": "Observation.component.value[x]",
        "type": [
          {
            "code": "CodeableConcept"
          },
          {
            "code": "boolean"
          }
        ]
      },
      {
        "id": "Observation.component:reference_genome",
        "path": "Observation.component",
        "sliceName": "reference_genome",
        "min": 1,
        "max": "1"
      },
      {
        "id": "Observation.component:reference_genome.code",
        "path": "Observation.component.code",
        "patternCodeableConcept": {
          "coding": [
            {
              "code": "ReferenceGenome"
            }
          ]
        }
      },
      {
        "id": "Observation.component:reference_genome.value[x]",
        "path": "Observation.component.value[x]",
        "type": [
          {
            "code": "CodeableConcept"
          }
        ]
      },
      {
        "id": "Observation.component:workflow_type",
        "path": "Observation.component",
        "sliceName": "workflow_type",
        "min": 0,
        "max": "1"
      },
      {
        "id": "Observation.component:workflow_type.code",
        "path": "Observation.component.code",
        "patternCodeableConcept": {
          "coding": [
            {
              "code": "WorkflowType"
            }
          ]
        }
      },
      {
        "id": "Observation.component:workflow_type.value[x]",
        "path": "Observation.component.value[x]",
        "type": [
          {
            "code": "CodeableConcept"
          }
        ]
      },
      {
        "id": "Observation.component:workflow_tool",
        "path": "Observation.component",
        "sliceName": "workflow_tool",
        "min": 0,
        "max": "1"
      },
      {
        "id": "Observation.component:workflow_tool.code",
        "path": "Observation.component.code",
        "patternCodeableConcept": {
          "coding": [
            {
              "code": "WorkflowTool"
            }
          ]
        }
      },
      {
        "id": "Observation.component:workflow_tool.value[x]",
        "path": "Observation.component.value[x]",
        "type": [
          {
            "code": "CodeableConcept"
          }
        ]
      }
    ]
  }
}
